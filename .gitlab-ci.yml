image: node:14

stages:
  - Test
  - Code quality
  - Build
  - Deploy

variables:
  DOCKER_USERNAME: "artonopriienko"
  REPO_NAME: "docker-test"
  TAG: "latest"
  DOCKER_PASSWORD: ${DOCKER_PASSWORD}

before_script:
  - npm install
  - curl -fsSL https://get.docker.com -o get-docker.sh
  - sh get-docker.sh
  - docker --version

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]

Unit test:
  stage: Test
  script:
    - echo "Running unit tests..."
    - npm run test

Eslint:
  stage: Code quality
  allow_failure: true
  script:
    - echo "Linting code... This will take about 10 seconds."
    - npm run lint

Npm audit:
  stage: Code quality
  allow_failure: true
  script:
    - echo "Running npm packages audit..."
    - npm audit

Build:
  stage: Build
  script:
    - echo "Running prebuild..."
    - npm run prebuild
    - echo "Building the app..."
    - npm run build

Docker image:
  stage: Build
  allow_failure: true
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_USERNAME/$REPO_NAME:$TAG .
    - echo "Pushing Docker image to registry..."
    - echo $DOCKER_PASSWORD
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push $DOCKER_USERNAME/$REPO_NAME:$TAG

Staging deploy:
  stage: Deploy
  script:
    - echo "Deploying to staging..."
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export AWS_REGION=$AWS_REGION
    - aws elasticbeanstalk create-application-version --application-name $EB_ENVIRONMENT_NAME --version-label $CI_COMMIT_REF_NAME --source-bundle S3Bucket=$S3_BUCKET_NAME,S3Key=$CI_COMMIT_REF_NAME
    - aws elasticbeanstalk update-environment --application-name $EB_ENVIRONMENT_NAME --environment-name $EB_ENVIRONMENT_NAME --version-label $CI_COMMIT_REF_NAME
  when: manual
